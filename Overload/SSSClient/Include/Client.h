
#pragma once

#include "Engine.h"
#include "GameObject.h"

SSS_USING

#ifdef _WIN64
	#ifdef _DEBUG
		#pragma comment(lib, "Engine64_Debug")
	#else
		#pragma comment(lib, "Engine64")
#endif // _DEBUG
#else
	#ifdef _DEBUG
		#pragma comment(lib, "Engine_Debug")
	#else
		#pragma comment(lib, "Engine")
	#endif // _DEBUG
#endif // 



enum PLAYER_STANDARD_STATE
{
	PLAYER_STANDARD_NONE = -1,
	PLAYER_IDLE1,
	PLAYER_IDLE2,
	PLAYER_ROT_R,
	PLAYER_ROT_L,
	PLAYER_WALK_F,
	PLAYER_WALK_B,
	PLAYER_RUN_F,
	PLAYER_RUN_B,
	PLAYER_EMOTION_1,
	PLAYER_EMOTION_2,
	PLAYER_EMOTION_3,
	PLAYER_EMOTION_4,
	PLAYER_EMOTION_5,
	PLAYER_EMOTION_6,
	PLAYER_EMOTION_6_LOOP,
	PLAYER_EMOTION_7,
	PLAYER_EMOTION_8,
	PLAYER_EMOTION_9,
	PLAYER_EMOTION_10,
	PLAYER_EMOTION_11,
	PLAYER_EMOTION_12,
	PLAYER_EMOTION_13,
	PLAYER_EMOTION_14,
	PLAYER_EMOTION_15,
	PLAYER_EMOTION_16,
	PLAYER_EMOTION_17,
	PLAYER_EMOTION_18,
	PLAYER_EMOTION_19,
	PLAYER_EMOTION_20,
	PLAYER_EMOTION_21,
	PLAYER_DODGE,
	PLAYER_DODGE_GETUP
};

enum PLAYER_BATTLE_STATE
{
	PLAYER_BATTLE_NONE = 0,
	PLAYER_ATTACK_A1,
	PLAYER_ATTACK_A2,
	PLAYER_ATTACK_A3,
	PLAYER_SMASH_A1,
	PLAYER_ATTACK_B1,
	PLAYER_SMASH_B2,
	PLAYER_SKILL_A1,
	PLAYER_SKILL_A2,
	PLAYER_SMASH_A2,
	PLAYER_SKILL_B1,
	PLAYER_SKILL_B2,
	PLAYER_SKILL_B3
};

enum PLAYER_DAMAGED_STATE
{
	PLAYER_DAMAGED_NONE = -1,
	PLAYER_DMG_FRONT,
	PLAYER_DMG_BACK,
	PLAYER_DOWN,
	PLAYER_DOWN_LOOP,
	PLAYER_DEADBODY,
	PLAYER_RECOVERY,
	PLAYER_DIE,
	PLAYER_PASSOUT
};

enum NPC_STATE
{
	NPC_NONE = -1,
	NPC_IDLE1,
	NPC_IDLE2,
	NPC_WALK_FRONT,
	NPC_RUN_FRONT,
	NPC_ATTACK1,
	NPC_ATTACK2,
	NPC_SKILL1,
	NPC_SKILL2,
	NPC_DAMAGED_BACK,
	NPC_DAMAGED_FRONT,
	NPC_DOWN,
	NPC_RECOVERY,
	NPC_DIE,
	NPC_DOWN_DEAD_BODY,
	NPC_PASSOUT,
	NPC_DOWNLOOP,
	NPC_FREEZE,
	NPC_END
};

enum MONSTER_STATE
{
	CS_NONE,
	CS_ON_IDLE,
	CS_ON_DETECT,
	CS_ON_CHASE,
	CS_ON_ATTACK,
	CS_ON_DAMAGED,
	CS_ON_DOWN,
	CS_ON_MESMERISE,
	CS_ON_DEATH
};

enum ATTACK_ATTRIBUTE
{
	ATTACK_NORMAL = 0,
	ATTACK_DOWN,
	ATTACK_STUN,
	ATTACK_FREEZE,
	ATTACK_END
};
